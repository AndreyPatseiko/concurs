@keyframes show {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

body {
	padding: 0;
	margin: 0;
	background: whitesmoke;
}

r = 17px;
n = 6;
angle = (360 / n);
animationSpeed = 15;

// ──── Start ─────────────────────────────────────────────────────────────────────────────
@keyframes startAnim {
	0% {
		transform: rotateY(360deg) translateY(-310px) rotateZ(0deg);
	}

	25% {
		transform: rotateY(270deg) translateY(-315px) rotateZ(-10deg);
	}

	50% {
		transform: rotateY(180deg) translateY(-310px) rotateZ(0deg);
	}

	75% {
		transform: rotateY(90deg) translateY(-305px) rotateZ(10deg);
	}

	100% {
		transform: rotateY(0deg) translateY(-310px) rotateZ(0deg);
	}
}

startSize = 50px;
starColor = gold;

.start-wrapper {
	top: 40px;
	position: absolute;
	animation-name: startAnim;
	animation-duration: animationSpeed s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
	// transform: rotateY(360deg) translateY(0px) rotateZ(0deg);
	width: startSize * 1.85;
	height: startSize * 1.85;
	transform-style: preserve-3d;
	left: calc(50vw - 50px);
	top: 0;
}

.side {
	width: 100%;
	height: 100%;
	position: absolute;
	transform: translateZ(-10px);

	&.back {
		transform: translateZ(10px);
	}
}

.star-side {
	position: absolute;
	width: 0;
	height: 0;

	&:nth-of-type(1) {
		top: 32px;
		border-right: startSize solid transparent;
		border-bottom: 34px solid starColor;
		border-left: startSize solid transparent;
		transform: rotate(35deg);
	}

	&:nth-of-type(2) {
		top: 32px;
		left: -8px;
		border-right: startSize solid transparent;
		border-bottom: 34px solid starColor;
		border-left: startSize solid transparent;
		transform: rotate(-35deg);
	}

	&:nth-of-type(3) {
		border-bottom: 40px solid starColor;
		border-left: 17px solid transparent;
		border-right: 17px solid transparent;
		top: 0;
		left: 29px;
	}
}

.star-center-side {
	width: 18px;
	height: 95px;
	background: #dcbb08;
	position: absolute;
	transform-style: preserve-3d;

	&:nth-of-type(1) {
		transform: translateX(-9px) rotateY(90deg) rotateX(-21deg) translateZ(26px) translateY(-12px);
	}

	&:nth-of-type(2) {
		transform: translateX(-9px) rotateY(90deg) rotateX(21deg) translateZ(60px) translateY(21px);
	}

	&:nth-of-type(3) {
		transform: translateX(-9px) rotateY(90deg) rotateX(90deg) translateZ(13px) translateY(45px);
	}

	&:nth-of-type(4) {
		transform: translateX(-9px) rotateY(90deg) rotateX(55deg) translateZ(11px) translateY(41px);
	}

	&:nth-of-type(5) {
		transform: translateX(-9px) rotateY(90deg) rotateX(125deg) translateZ(-42px) translateY(33px);
	}
}

// ──── Floor ─────────────────────────────────────────────────────────────────────────────
.general {
	width: 100%;
	height: 100%;
	background: whitesmoke;
	// border: 1px solid red;
	position: absolute;
	bottom: 0;
	transform-style: preserve-3d;
	transform: rotateX(58deg);
}

// ──── tree ──────────────────────────────────────────────────────────────────────────────
@keyframes rotate {
	0% {
		transform: rotateY(0) rotateZ(0deg) translateZ(0px);
	}

	100% {
		transform: rotateY(0) rotateZ(360deg) translateZ(0px);
	}
}

@keyframes shadow {
	50% {
		transform: translateZ(-34px) scaleX(0.9) scaleY(0.9) translateX(15px) translateY(15px);
	}
}

.second-tree {
	// border: 1px solid red;
	position: absolute;
	top: calc(50vw - 150px);
	left: calc(50vw - 100px);
	animation-name: rotate;
	animation-duration: animationSpeed s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
	// transform: rotateX(70deg) rotateY(0) rotateZ(19deg) translateZ(0px);
	width: 200px;
	height: 200px;
	margin: 0 auto;
	transform-style: preserve-3d;

	&.second {
		top: 100px;
		left: calc(50vw - 320px);
	}

	&.tree {
		top: 70px;
		left: calc(50vw + 150px);
	}

	&.four {
		top: 50px;
		left: calc(50vw + 350px);
	}

	&.five {
		top: 50px;
		left: calc(50vw - 550px);
	}
}

.tree-side-el {
	position: absolute;
	text-align: center;
	animation-name: blink;
	animation-duration: animationSpeed s;
	animation-iteration-count: infinite;
	transform-style: preserve-3d;
	border-bottom: 60px solid #034203;
	border-left: 20px solid transparent;
	border-right: 20px solid transparent;
	height: 0;
	width: 0;
	left: 12px;
	transition: box-shadow 1s linear;

	&:after {
		width: 37px;
		height: 6px;
		box-shadow: 0 5px 18px rgba(255, 255, 255, 0.8);
		background: transparent;
		position: absolute;
		bottom: 0;
		content: '';
		display: block;
		bottom: -55px;
		left: -15px;
		transform: translateZ(-5px);
		animation: blinkLight 5s linear infinite;
	}
}

.row {
	transform-style: preserve-3d;
	width: 60px;
	height: 60px;
	position: absolute;
	top: calc(50% - 30px);
	right: calc(50% - 30px);

	for j in (0 .. 6) {
		&:nth-of-type({j + 1}) {
			transform: translateZ((300 - j * 37)px) translateY((-9.5 * j)px);

			.tree-side-el {
				for i in (0 .. n + j * 2) {
					&:nth-of-type({i + 1}) {
						border-bottom-width: (60 + j * 18)px;
						animation-delay: (animationSpeed / (n + j * 2)) * i s;
						transform: rotateX(-90deg) rotateY((i * 360 / (n + j * 2)) deg) translateZ(r + j * 7) rotateX(35deg);
					}
				}

				&:after {
					bottom: (-59 - j * 18)px;
				}
			}
		}
	}
}

@keyframes blink {
	0% {
		border-bottom-color: #034203;
	}

	50% {
		border-bottom-color: green;
	}

	100% {
		border-bottom-color: #034203;
	}
}

@keyframes blinkLight {
	0% {
		box-shadow: 0 5px 18px rgba(255, 0, 0, 0.8);
	}

	50% {
		box-shadow: 0 5px 18px rgba(0, 255, 255, 0.8);
	}

	100% {
		box-shadow: 0 5px 18px rgba(255, 255, 0, 0.8);
	}
}

// ──── Drift ─────────────────────────────────────────────────────────────────────────────
.drift-wrapper {
	display: none;
	width: 40px;
	height: 40px;
	top: 100px;
	position: absolute;
	transform: rotateZ(55deg) translateZ(17px);
	transform-style: preserve-3d;

	.drift-side {
		transform-style: preserve-3d;
		position: absolute;
		border-bottom: 40px solid white;
		border-left: 20px solid transparent;
		border-right: 20px solid transparent;

		for l in (1 .. 4) {
			&:nth-of-type({l}) {
				border-bottom-color: rgb(255 - l * 5, 255 - l * 5, 255 - l * 5);
				transform: rotateX(-90deg) rotateY((l * 90) deg) translateZ(10px) rotateX(30deg);
			}
		}
	}

	&:nth-of-type(2) {
		top: 120px;
		right: 150px;
		transform: rotateZ(12deg) translateZ(5px) scale3d(12, 24, 0.3) translateY(11px);
	}
}

// ──── Snow start ────────────────────────────────────────────────────────────────────────
startSize = 20;
startColor = rgba(0, 55, 255, 0.6);
startSolid = 1px;

random(min, max) {
	return floor(math(0, 'random') * (max - min + 1) + min);
}

@keyframes snowStarAnim {
	0% {
		transform: translate3d(0px, 0px, 500px) rotateX(90deg);
		opacity: 1;
	}

	50% {
		transform: translate3d(50px, 0px, 250px) rotateX(90deg) rotateZ(15deg) rotateY(15deg);
		opacity: 0.6;
	}

	100% {
		transform: translate3d(0, 0, -1px) rotateX(80deg) rotateZ(35deg);
		opacity: 0.3;
	}
}

.snow-start-spline {
	width: startSize px;
	height: startSize px;
	position: absolute;
	opacity: 0;
	transform: translateZ(-10px);
	animation-name: snowStarAnim;
	animation-duration: 5 s;
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;
	transform-style: preserve-3d;

	for spl in (1 .. 180) {
		&:nth-of-type({spl}) {
			top: random(1, 1000) px;
			right: random(1, 1000) px;
			animation-delay: random(5, 20) s;
			animation-duration: random(5, 20) s;
			width: random(5, 20) px;
			height: random(5, 20) px;
			opacity: random(0.5, 1);
		}
	}
}

.snow-start-el {
	width: 50%;
	height: 50%;
	position: absolute;
	overflow: hidden;
	right: 0;
	transform-origin: left bottom;

	for xy in (0 .. 7) {
		&:nth-of-type({xy + 1}) {
			transform: rotate((xy * 45) deg);
		}
	}

	.line {
		position: absolute;
		background: startColor;
		width: startSolid;
		transform-origin: bottom center;
		height: 110%;
		transform: rotateZ(45deg) translateX(-1px) translateY(0px);
		top: 0;
		left: 0;

		&>div {
			position: absolute;
			background: startColor;
			width: startSolid;
			height: 50%;
			transform-origin: bottom center;

			&:nth-of-type(odd) {
				transform: rotateZ(45deg);
			}

			&:nth-of-type(even) {
				transform: rotateZ(-45deg);
			}

			for x in (1 .. 3) {
				&:nth-of-type({x}) {
					height: (50 - x * 9)%;
					bottom: (x * (startSize / 6)) px;
				}

				&:nth-of-type({x + 3}) {
					height: (50 - x * 9)%;
					bottom: (x * (startSize / 6)) px;
				}
			}
		}
	}
}